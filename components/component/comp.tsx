/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/BSimBdWCMwL
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Progress } from "@/components/ui/progress"
import { Button } from "@/components/ui/button"
import { ResponsiveLine } from "@nivo/line"

export function comp() {
  return (
    <div className="bg-[#0d1117] text-white min-h-screen p-8 md:p-12 lg:p-16">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-semibold">Dashboard</h1>
        <SettingsIcon className="h-6 w-6 text-gray-300" />
      </div>
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
        <div className="bg-[#161b22] p-4 rounded-lg">
          <div className="w-full h-[300px] md:h-[400px] lg:h-[500px]">
            <div>
              <div>
                A pretty CSS3 popup.
                <br />
                Easily customizable.{"\n                          "}
              </div>
            </div>
          </div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <Card className="bg-[#161b22]">
            <CardHeader>
              <CardTitle>LIFTING SETTINGS</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-2">
                <Label className="text-white" htmlFor="amount-water">
                  Amount of Water
                </Label>
                <Input className="text-white" defaultValue="123345" id="amount-water" />
                <Label className="text-white" htmlFor="lifting-height">
                  Lifting Height
                </Label>
                <Input className="text-white" defaultValue="123345" id="lifting-height" />
                <div className="flex items-center gap-2">
                  <Label className="text-white" htmlFor="time-of-day-lifting">
                    Time of Day
                  </Label>
                  <Input className="w-12 text-white" defaultValue="5" id="time-of-day-lifting" />
                  <Input className="w-12 text-white" defaultValue="11" />
                  <Progress className="w-full" value={50} />
                </div>
              </div>
            </CardContent>
          </Card>
          <Card className="bg-[#161b22]">
            <CardHeader>
              <CardTitle>DISTRIBUTION SETTINGS</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-2">
                <Label className="text-white" htmlFor="area-distribution">
                  Area of Distribution
                </Label>
                <Input className="text-white" defaultValue="123345" id="area-distribution" />
                <Label className="text-white" htmlFor="depth-distribution">
                  Depth of Distribution
                </Label>
                <Input className="text-white" defaultValue="123345" id="depth-distribution" />
                <div className="flex items-center gap-2">
                  <Label className="text-white" htmlFor="time-of-day-distribution">
                    Time of Day
                  </Label>
                  <Input className="w-12 text-white" defaultValue="5" id="time-of-day-distribution" />
                  <Input className="w-12 text-white" defaultValue="11" />
                  <Progress className="w-full" value={50} />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
        <Card className="bg-[#161b22]">
          <CardHeader>
            <CardTitle>PRESSURIZATION SETTINGS</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-2">
              <Label className="text-white" htmlFor="amount-water-pressurization">
                Amount of Water
              </Label>
              <Input className="text-white" defaultValue="123345" id="amount-water-pressurization" />
              <Label className="text-white" htmlFor="pressurization-required">
                Pressurization required
              </Label>
              <Input className="text-white" defaultValue="123345" id="pressurization-required" />
              <div className="flex items-center gap-2">
                <Label className="text-white" htmlFor="time-of-day-pressurization">
                  Time of Day
                </Label>
                <Input className="w-12 text-white" defaultValue="5" id="time-of-day-pressurization" />
                <Input className="w-12 text-white" defaultValue="11" />
                <Progress className="w-full" value={50} />
              </div>
            </div>
          </CardContent>
        </Card>
        <Card className="bg-[#161b22]">
          <CardHeader>
            <CardTitle>SOLAR PANEL SETTINGS</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-2">
              <Label className="text-white" htmlFor="net-area">
                Net Area of Active Solar Panels
              </Label>
              <Input className="text-white" defaultValue="123345" id="net-area" />
              <Label className="text-white" htmlFor="solar-panel-efficiency">
                Solar Panel Efficiency
              </Label>
              <Input className="text-white" defaultValue="123345" id="solar-panel-efficiency" />
              <div className="flex items-center gap-2">
                <Label className="text-white" htmlFor="time-of-day-solar">
                  Time of Day
                </Label>
                <Input className="w-12 text-white" defaultValue="5" id="time-of-day-solar" />
                <Input className="w-12 text-white" defaultValue="11" />
                <Progress className="w-full" value={50} />
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
      <div className="flex justify-between items-center mb-4">
        <div className="flex space-x-4">
          <Button className="text-white" variant="ghost">
            HOURLY
          </Button>
          <Button className="text-white" variant="ghost">
            DAILY
          </Button>
          <Button className="text-white" variant="ghost">
            MONTHLY
          </Button>
        </div>
        <Button className="text-white" variant="secondary">
          APPLY
        </Button>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-4">
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
        <LineChart className="w-full h-[200px] md:h-[250px] lg:h-[300px]" />
      </div>
    </div>
  )
}

function LineChart(props: any) {
  return (
    <div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "Jan", y: 60 },
              { x: "Feb", y: 48 },
              { x: "Mar", y: 177 },
              { x: "Apr", y: 78 },
              { x: "May", y: 96 },
              { x: "Jun", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application"
      />
    </div>
  )
}


function SettingsIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}
